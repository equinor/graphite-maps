name: Build and test Linux

on:
 push:
   branches:
     - main
   tags: "*"
 pull_request:

env:
  UV_FROZEN: true         # https://docs.astral.sh/uv/configuration/environment/#uv_frozen

jobs:
  build-wheels-linux:
    name: Build ðŸ›ž
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12' ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: build-wheels-linux
        uses: docker://quay.io/pypa/manylinux2014_x86_64
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        with:
          entrypoint: /bin/bash
          args: '-c "sh wheel_build_scripts/build_wheels_linux.sh ${{ matrix.python-version }}"'

      - name: Upload wheel as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Python ${{ matrix.python-version }} wheel
          path: |
            graphite*.whl

  test-linux:
    needs: [build-wheels-linux]
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12' ]
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: "Python ${{ matrix.python-version }} wheel"
      - name: Install wheel
        run: |
          # Find the downloaded wheel file
          wheel_file=$(find . -name "graphite*.whl" -print -quit)

          echo "Found wheel file @ $wheel_file"

          # Install the wheel
          pip install "$wheel_file"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run EnIF unit tests
        run: |
          python -m pip install pytest
          pytest

      - name: Clone & install ERT repo
        run: |
          git clone --branch enif-in-ert-no-sksparse --single-branch https://github.com/yngve-sk/ert
          echo "install enif branch  (point to eqn when enif merged in)"
          cd ert
          sudo apt-get install libegl1
          pip install ".[dev]"
          pip uninstall scikit-sparse

      - name: Run ERT EnIF tests
        run: |
          pytest -k "enif"

      - name: Run ERT poly example with EnIF
        run: |
          ert ensemble_information_filter ert/test-data/ert/poly_example/poly.ert

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels-linux, test-linux]
    environment: pypi
    permissions:
      id-token: write

    # If this is a tagged release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Get wheels
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move to dist/
        run: |
          mkdir dist
          find artifacts -name "*.whl" -exec mv '{}' dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
